apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.cdkj.tha"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 6
        versionName "1.6.1"

        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
                arguments = [moduleName: project.getName()]
            }
        }

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {


        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            minifyEnabled false //开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "THA_${variant.versionName}_${releaseTime()}.apk"
                }
            }
//            ndk {
//                // 需要将 x86 架构过滤掉
//                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
//            }
        }

        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            minifyEnabled false //开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/ASL2.0'
        exclude 'version.properties'
        // ... and any other excludes go here
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':cdcommon')
    // Banner
    implementation 'com.youth.banner:banner:1.4.10'
    // SwitchButton
    implementation 'com.kyleduo.switchbutton:library:1.4.4'
    //路由
    api 'com.alibaba:arouter-api:1.3.1'

    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    // multidex
    implementation 'com.android.support:multidex:1.0.3'
    // 二维码
    api 'cn.yipianfengye.android:zxing-library:2.2'
    implementation 'com.google.android:flexbox:1.0.0'

    implementation group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.14.7'
    implementation 'org.web3j:core:3.3.1-android'
//    implementation "org.ethereum:ethereumj-core:1.6.+"

    implementation 'com.github.razerdp:BasePopup:1.9.4'
    /*debug 数据库调试*/
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.1'

    //选择框
    implementation 'com.contrarywind:Android-PickerView:4.1.4'

}
///格式化打完完成后APK名称中的时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC+8"))
}
